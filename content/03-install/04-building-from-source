# Building Mantis from source

As an alternative to downloading the client, you may choose to build the client from source. You can build Mantis using SBT or Nix.

## SBT

### Requirements to build with SBT
- JDK 1.8 (download from java.com)
- SBT (download sbt)
- Python 2.7.15 (download from python.org)

### Build the client
- Download the repo and cd into the root directory.

```
git clone git@github.com:input-output-hk/mantis.git
cd mantis
```

Use sbt to create a distribution of the client.

```
git submodule update --recursive --init
sbt dist
```

This updates all submodules and creates a distribution zip in .<mantis-install-folder>/target/universal/.

As an alternative to building with SBT, you may use Nix:

## Nix

### Requirements to build with Nix

- Nix (Install instructions on https://github.com/NixOS/nix#installation)
- To load environment variables, run. /home/<user>/.nix-profile/etc/profile.d/nix.sh

### Build the client

Use the `nix-build` command to build the project files
```
nix-build
```

Regenerate lock files

```
Nix-shell
sbtix-gen-all2
```

### If that didnâ€™t work...

If Nix build fails during the "ensure Nix expressions are up-to-date" step, check the artifacts of that step. There should be a patch provided, which you can apply locally with:
patch -p1 < downloaded.patch

This patch will update the lock files for you.

### Why so many lock files?

- repo.nix : generated by the sbtix-gen command and includes only the build dependencies for the project.
- project/repo.nix : generated by the sbtix-gen-all command and includes only the plugin dependencies. Also generates repo.nix.
- project/project/repo.nix : generated by the sbtix-gen-all2 command and includes only the plugin dependencies. Also generates repo.nix and project/repo.nix.

### error: unsupported argument 'submodules' to 'fetchGit'

Make sure to update your version of Nix. fetchGit support for submodules is relatively recent.

Update the version of Nix you are using, otherwise:
- Remove the "submodules = true;" argument from fetchGit (in ./nix/pkgs/mantis/default.nix).
- git submodule update --recursive --init
- nix-build

## Mantis wallet from source

### Requirements

- Node.js - v12+ (optional nvm)
- yarn - tested with 1.21.1-1.22.5

### Clone and Initialize the project
```
	git clone git@github.com:input-output-hk/mantis-wallet.git
	cd mantis-wallet
```

Running the yarn command in the project directory will download the dependencies. After this action, all the script below can be run.
```
	yarn
	yarn build-renderer
	yarn build-main
	yarn electron
```
